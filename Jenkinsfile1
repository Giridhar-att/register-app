pipeline {
  agent { label 'jenkins-agent'}
tools {
  jdk 'Java17'
  maven 'Maven2'
}
environment {
            APP_NAME = "register-app-pipeline"
            RELEASE = "1.0.0"
            DOCKER_USER = "giridharatt"
            DOCKER_PASS = "dockerhub"
            IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
            IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
	    
}
            
  stages {
    stage ("cleanup workspace") {
      steps {
        cleanWs()
      }
    }
    stage ( "checkout from SCM") {
      steps {
        git branch: 'main', credentialsId: 'github', url: 'https://github.com/Giridhar-att/register-app/'
      }
    }
   stage ("Build application") {
     steps {
       sh "mvn clean package"
     }
     }
  stage ("Test Application") {
    steps {
      sh "mvn test"
    }
  }
 stage("SonarQube Analysis"){
  steps {
  script {
   withSonarQubeEnv(credentialsID: 'jenkins-sonarqube-token') {
   sh "mvn sonar:sonar"
}
  }
}
}

stage("Qualuty gate"){
steps {
script{
  waitForQualityGate abortPipeline: false, credentialsID: 'jenkins-sonarqube-token'
}
}
}
stage("Build and Push Docker Image"){
steps {
   script{
		docker.withRegistry('',DOCKER_PASS) {
                docker_image = docker.build "${IMAGE_NAME}"
                    }

                    docker.withRegistry('',DOCKER_PASS) {
                        docker_image.push("${IMAGE_TAG}")
                        docker_image.push('latest')

}
}
}
}
 stage("Trivy Scan") {
           steps {
               script {
	            sh ('docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image giridharatt/register-app-pipeline:latest --no-progress --scanners vuln  --exit-code 0 --severity HIGH,CRITICAL --format table')
               }
           }
       }
stage("cleanup Artifacts"){
    steps {
      script{
		sh "docker rmi ${IMAGE_NAME}:${IMAGE_TAG}"
		sh "docker rmi ${IMAGE_NAME}:latest"
}
    }
}

stage("trigger Cd pipeline")  {
            steps {
                script {
                    sh "curl -v -k --user clouduser:${JENKINS_API_TOKEN} -X POST -H 'cache-control: no-cache' -H 'content-type: application/x-www-form-urlencoded' --data 'IMAGE_TAG=${IMAGE_TAG}' 'ec2-18-224-184-153.us-east-2.compute.amazonaws.com:8080/job/gitops-register-app-cd/buildWithParameters?token=gitops-token'"
                }
            }
       }

  }
}
